install.packages("magick")
library(magick)
str(magick::magick_config())
UV_GR_library <- image_read("~/Desktop/UV_GR_library 20240219_cleaned.tif")
image_gray <- image_convert(image, colorspace = "Gray")
image_gray <- image_convert(UV_GR_library, colorspace = "Gray")
threshold_value <- 0.5  # Adjust threshold value as needed
image_threshold <- image_threshold(image_gray, "white", threshold = threshold_value)
image_clean <- image_morphology(image_threshold, "close", "Diamond:1")
image_display(image_clean)
image_clean <- image_morphology(image_threshold, "close", "Diamond:1")
image_display(image_clean)
raster_image <- image_convert(image_clean, format = "png")
plot(as.raster(raster_image))
image_write(image_clean, "cleaned_image.tiff")
file_path <- "~/Desktop/"
file_path <- "~/Desktop/cleaned_image.tiff")
file_path <- "~/Desktop/")
install.packages("EBImage")
install.packages("EBImage")
# write a code to remove background from gel images
#install.packages("magick")
#library(magick)
#str(magick::magick_config())
install.packages("imager")
library(imager)
UV_GR_library <- load.image("~/Desktop/UV_GR_library 20240219_cleaned.tif")
# Given data
mean_weight <- 3.4
std_dev <- 0.6
# (a) Percentage of births below 2.5 kg
X1 <- 2.5
Z_score1 <- (X1 - mean_weight) / std_dev
percentage_below_X1 <- pnorm(Z_score1) * 100
# (b) Percentage of births above 4.6 kg
X2 <- 4.6
Z_score2 <- (X2 - mean_weight) / std_dev
percentage_above_X2 <- (1 - pnorm(z_score2)) * 100
# Given data
mean_weight <- 3.4
std_dev <- 0.6
# (a) Percentage of births below 2.5 kg
X1 <- 2.5
Z_score1 <- (X1 - mean_weight) / std_dev
percentage_below_X1 <- pnorm(Z_score1) * 100
# (b) Percentage of births above 4.6 kg
X2 <- 4.6
Z_score2 <- (X2 - mean_weight) / std_dev
percentage_above_X2 <- (1 - pnorm(Z_score2)) * 100
# (c) New cutout points for low and high weight risk deliveries
Z_score_low <- qnorm(0.10)
Z_score_high <- qnorm(0.90)
X_low <- mean_weight + Z_score_low * std_dev
X_high <- mean_weight + Z_score_high * std_dev
# Given data
mean_weight <- 3.4
std_dev <- 0.6
# (a) Percentage of births below 2.5 kg
X1 <- 2.5
Z_score1 <- (X1 - mean_weight) / std_dev
percentage_below_X1 <- pnorm(Z_score1) * 100
percentage_below_X1
# (b) Percentage of births above 4.6 kg
X2 <- 4.6
Z_score2 <- (X2 - mean_weight) / std_dev
percentage_above_X2 <- (1 - pnorm(Z_score2)) * 100
percentage_above_X2
# (c) New cutout points for low and high weight risk deliveries
Z_score_low <- qnorm(0.10)
Z_score_high <- qnorm(0.90)
X_low <- mean_weight + Z_score_low * std_dev
X_high <- mean_weight + Z_score_high * std_dev
X_low
X_high
# Given data
mean_concentration <- 120  # Mean PM-10 concentration in µg/m³
std_dev <- 15               # Standard deviation in µg/m³
# (a) Probability that a day's PM-10 concentration is below 140 µg/m³
x1 <- 140  # Concentration threshold in µg/m³
p_below_x1 <- pnorm(x1, mean = mean_concentration, sd = std_dev)
p_below_x1
# (b) Probability that a day's PM-10 concentration is between 100 and 140 µg/m³
x2 <- 100  # Lower concentration threshold in µg/m³
p_above_x2 <- pnorm(x2, mean = mean_concentration, sd = std_dev)
p_between_x2_and_x1 <- p_below_x1 - p_above_x2
p_between_x2_and_x1
# (c) Probability that a day's PM-10 concentration is above 150 µg/m³
x3 <- 150  # Concentration threshold in µg/m³
p_above_x3 <- 1 - pnorm(x3, mean = mean_concentration, sd = std_dev)
p_above_x3
# (d) Expected number of days per year in violation of federal law
annual_violation_days <- p_above_x3 * 365  # Assuming 365 days in a year
annual_violation_days
# Given data
mean_concentration <- 120  # Mean PM-10 concentration in µg/m³
std_dev <- 15               # Standard deviation in µg/m³
# (a) Probability that a day's PM-10 concentration is below 140 µg/m³
x1 <- 140  # Concentration threshold in µg/m³
p_below_x1 <- pnorm(x1, mean = mean_concentration, sd = std_dev)
p_below_x1
# (b) Probability that a day's PM-10 concentration is between 100 and 140 µg/m³
x2 <- 100  # Lower concentration threshold in µg/m³
p_above_x2 <- pnorm(x2, mean = mean_concentration, sd = std_dev)
p_between_x2_and_x1 <- p_below_x1 - p_above_x2
p_between_x2_and_x1
# (c) Probability that a day's PM-10 concentration is above 150 µg/m³
x3 <- 150  # Concentration threshold in µg/m³
p_above_x3 <- 1 - pnorm(x3, mean = mean_concentration, sd = std_dev)
p_above_x3
# (d) Expected number of days per year in violation of federal law
annual_violation_days <- p_above_x3 * 365  # Assuming 365 days in a year
annual_violation_days
# Given data
mean_concentration <- 120  # Mean PM-10 concentration in µg/m³
std_dev <- 15               # Standard deviation in µg/m³
# (a) Probability that a day's PM-10 concentration is below 140 µg/m³
x1 <- 140  # Concentration threshold in µg/m³
p_below_x1 <- pnorm(x1, mean = mean_concentration, sd = std_dev)
p_below_x1
# (b) Probability that a day's PM-10 concentration is between 100 and 140 µg/m³
x2 <- 100  # Lower concentration threshold in µg/m³
p_above_x2 <- pnorm(x2, mean = mean_concentration, sd = std_dev)
p_between_x2_and_x1 <- p_below_x1 - p_above_x2
p_between_x2_and_x1
# (c) Probability that a day's PM-10 concentration is above 150 µg/m³
x3 <- 150  # Concentration threshold in µg/m³
p_above_x3 <- 1 - pnorm(x3, mean = mean_concentration, sd = std_dev)
p_above_x3
# (d) Expected number of days per year in violation of federal law
annual_violation_days <- p_above_x3 * 365  # Assuming 365 days in a year
annual_violation_days
PlantGrowth
help(PlantGrowth)
hist(PlantGrowth$weight)
# Draw a Normal Q-Q plot of the weights with a reference line superimposed
qqnorm(PlantGrowth$weight)
qqline(PlantGrowth$weight)
# Given data
mean_concentration <- 120  # Mean PM-10 concentration in µg/m³
std_dev <- 15               # Standard deviation in µg/m³
# (a) Probability that a day's PM-10 concentration is below 140 µg/m³
x1 <- 140  # Concentration threshold in µg/m³
p_below_x1 <- pnorm(x1, mean = mean_concentration, sd = std_dev)
p_below_x1
# (b) Probability that a day's PM-10 concentration is between 100 and 140 µg/m³
x2 <- 100  # Lower concentration threshold in µg/m³
p_above_x2 <- pnorm(x2, mean = mean_concentration, sd = std_dev)
p_between_x2_and_x1 <- p_below_x1 - p_above_x2
p_between_x2_and_x1
# (c) Probability that a day's PM-10 concentration is above 150 µg/m³
x3 <- 150  # Concentration threshold in µg/m³
p_above_x3 <- 1 - pnorm(x3, mean = mean_concentration, sd = std_dev)
p_above_x3
# (d) Expected number of days per year in violation of federal law
annual_violation_days <- p_above_x3 * 365  # Assuming 365 days in a year
annual_violation_days
# Given data
mean_weight <- 3.4
std_dev <- 0.6
# (a) Percentage of births below 2.5 kg
X1 <- 2.5
Z_score1 <- (X1 - mean_weight) / std_dev
percentage_below_X1 <- pnorm(Z_score1) * 100
percentage_below_X1
# (b) Percentage of births above 4.6 kg
X2 <- 4.6
Z_score2 <- (X2 - mean_weight) / std_dev
percentage_above_X2 <- (1 - pnorm(Z_score2)) * 100
percentage_above_X2
# (c) New cutout points for low and high weight risk deliveries
Z_score_low <- qnorm(0.10)
Z_score_high <- qnorm(0.90)
X_low <- mean_weight + Z_score_low * std_dev
X_high <- mean_weight + Z_score_high * std_dev
X_low
X_high
# Adopted from the Cebola Lab, correspondence hannah.maude12@imperial.ac.uk
## Differential expression
#***All following code should be run in `R`.***
#The differential expression analysis contains the following steps:
#- Import count data
#- Import data to DEseq2
#- Differential gene expression
#- QC plots
# Adopted from the Cebola Lab, correspondence hannah.maude12@imperial.ac.uk
## Differential expression
#***All following code should be run in `R`.***
#The differential expression analysis contains the following steps:
#- Import count data
#- Import data to DEseq2
#- Differential gene expression
#- QC plots
# packages requiured
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
#BiocManager::install("cqn") #optional for cqn normalisation
BiocManager::install("DESeq2")
BiocManager::install("tximport")
BiocManager::install("biomaRt")
#install.packages("tidyverse")
library(tidyverse)
#install.packages(c("nycflights13", "gapminder", "Lahman")) # provide data on airline flights, world development, and baseball
#install.packages("palmerpenguins")
#install.packages("ggthemes")
library(palmerpenguins)
library(ggthemes)
ggplot(penguins, aes(x = body_mass_g)) +
geom_density()
ggplot(penguins, aes(y = fct_infreq(species))) +
geom_bar()
```
ggplot(penguins, aes(x = species)) +
geom_bar(color = "red")
ggplot(penguins, aes(x = species)) +
geom_bar(fill = "red")
# Visualizing relationships: numercal and categorical variables
#To visualize the relationship between a numerical and a categorical variable we can use side-by-side box plots
# box that indicates the range of the middle half of the data, a distance known as the interquartile range (IQR), stretching from the 25th percentile of the distribution to the 75th percentile.
#In the middle of the box is a line that displays the median, i.e. 50th percentile, of the distribution. These three lines give you a sense of the spread of the distribution and whether or not the distribution is symmetric about the median or skewed to one side.
ggplot(penguins, aes(x = species, y = body_mass_g)) +
geom_boxplot()
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density(linewidth = 0.75)
